<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     Mar 10, 2014 3:54:12 PM                                                        

     anyway    
     My AS 3D engine
                   
     LinkWu                                                             
     ====================================================================== -->
<project name="anyway" default="help" basedir=".">
	<description>
            My AS 3D engine
    </description>

	<property name="jvmarg.compc" value="-Dfile.encoding=${file.encoding} -Xmx384m -Dsun.io.useCanonCaches=false" />
	<property name="jvmarg.mxmlc" value="-Dfile.encoding=${file.encoding} -Xmx384m -Dsun.io.useCanonCaches=false" />
	<property name="jvmarg.asdoc" value="-Dfile.encoding=${file.encoding} -Xmx1024m -Dsun.io.useCanonCaches=false" />

	<property name="FLEX_HOME" location="D:/Adobe/Adobe Flash Builder 4.7 (64 Bit)/sdks/4.6.0" />
	<property name="AIR_HOME" location="D:/Adobe/Adobe Flash Builder 4.7 (64 Bit)/eclipse/plugins/com.adobe.flash.compiler_4.7.0.349722/AIRSDK" />

	<property name="config.locale" value="en_US" />
	<property name="config.optimize" value="true" />
	<property name="config.player.version" value="12.0" />
	<property name="config.swf.version" value="23" />
	<property name="config.incremental" value="true" />
	<property name="config.accessible" value="false" />
	<property name="config.debug" value="false" />
	<property name="config.debug_password" value="123456" />
	<property name="config.parallel" value="false" />
	<property name="config.maxthread" value="4" />

	<path id="ant.contrib.classpath">
		<fileset dir="${basedir}/ext/ant_contrib">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="ant.contrib.classpath" />

	<path id="ant.flex.classpath">
		<fileset dir="${FLEX_HOME}/ant">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<taskdef resource="flexTasks.tasks" classpathref="ant.flex.classpath" />

	<property name="core.project.name" value="aw_core" />
	<property name="core.dir" value="${basedir}/${core.project.name}" />
	<property name="core.src.dir" value="${core.dir}/src" />
	<property name="core.bin.dir" value="${core.dir}/bin" />
	<property name="core.lib.dir" value="${core.dir}/libs" />
	<property name="core.doc.dir" value="${basedir}/doc_core" />
	<property name="core.define.debug.key" value="SWITCH::debug" />
	<property name="core.define.debug.value" value="true" />

	<property name="test.project.name" value="aw_test" />
	<property name="test.dir" value="${basedir}/${test.project.name}" />
	<property name="test.src.dir" value="${test.dir}/src" />
	<property name="test.bin.dir" value="${test.dir}/bin" />
	<property name="test.lib.dir" value="${test.dir}/libs" />
	<property name="test.define.width.key" value="CONST::width" />
	<property name="test.define.width.value" value="500" />
	<property name="test.define.height.key" value="CONST::height" />
	<property name="test.define.height.value" value="500" />		

	<property name="tool.project.name" value="aw_tool" />
	<property name="tool.dir" value="${basedir}/${tool.project.name}" />
	<property name="tool.src.dir" value="${tool.dir}/src" />
	<property name="tool.bin.dir" value="${tool.dir}/bin" />
	<property name="tool.lib.dir" value="${tool.dir}/libs" />
	<property name="tool.workeras.dir" value="${tool.src.dir}/worker" />
	<property name="tool.workerswf.dir" value="${tool.dir}/workerswfs/worker" />

	<!-- ================================= 
          target: default              
         ================================= -->
	<target name="help" description="My AS 3D engine">
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: compile_core                      
         - - - - - - - - - - - - - - - - - -->
	<target name="compile_core" description="Compile aw_core">
		<compc output="${core.bin.dir}/${core.project.name}.swc" debug="${config.debug}" debug-password="${config.debug_password}" optimize="${config.optimize}" incremental="${config.incremental}" locale="${config.locale}" target-player="${config.player.version}" swf-version="${config.swf.version}" accessible="${config.accessible}" fork="true">
			<include-sources dir="${core.src.dir}" includes="*" />

			<library-path dir="${core.lib.dir}" includes="**/*.swc" append="true" />

			<compiler.define name="${core.define.debug.key}" value="${core.define.debug.value}" />

			<jvmarg line="${jvmarg.compc}" />
		</compc>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: compile_test                      
         - - - - - - - - - - - - - - - - - -->
	<target name="compile_test" depends="compile_core" description="Compile aw_test">
		<mxmlc file="${test.src.dir}/AWMain.as" output="${test.bin.dir}/AWMain.swf" debug="${config.debug}" debug-password="${config.debug_password}" optimize="${config.optimize}" incremental="${config.incremental}" locale="${config.locale}" target-player="${config.player.version}" swf-version="${config.swf.version}" accessible="${config.accessible}" static-rsls="true" fork="true">
			<source-path path-element="${test.src.dir}" />

			<library-path dir="${core.bin.dir}" includes="**/*.swc" append="true" />
			<library-path dir="${test.lib.dir}" includes="**/*.swc" append="true" />

			<compiler.define name="${test.define.width.key}" value="${test.define.width.value}" />
			<compiler.define name="${test.define.height.key}" value="${test.define.height.value}" />

			<jvmarg line="${jvmarg.mxmlc}" />
		</mxmlc>
		
		<copy todir="${test.bin.dir}" verbose="true">  
		    <fileset dir="${test.src.dir}">  
		        <include name="res/**"/>
		    </fileset>
		</copy>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: compile_tool                      
         - - - - - - - - - - - - - - - - - -->
	<target name="compile_tool" depends="compile_core" description="Compile aw_tool">
		<foreach target="gen_worker" param="worker.name" trim="true" parallel="${config.parallel}" maxthreads="${config.maxthread}" inheritall="true">
			<path>
				<fileset dir="${tool.workeras.dir}" includes="*.as" />
			</path>
			<param name="src.dir" value="${tool.src.dir}" />
			<param name="workerswf.dir" value="${tool.workerswf.dir}" />
		</foreach>

		<mxmlc file="${tool.src.dir}/AWTool.as" output="${tool.bin.dir}/AWTool.swf" debug="${config.debug}" debug-password="${config.debug_password}" optimize="${config.optimize}" incremental="${config.incremental}" locale="${config.locale}" target-player="${config.player.version}" swf-version="${config.swf.version}" accessible="${config.accessible}" static-rsls="true" fork="true">
			<source-path path-element="${tool.src.dir}" />

			<library-path dir="${core.bin.dir}" includes="**/*.swc" append="true" />
			<library-path dir="${tool.lib.dir}" includes="**/*.swc" append="true" />
			<library-path dir="${AIR_HOME}/frameworks/libs" includes="**/*.swc" append="true" />

			<jvmarg line="${jvmarg.mxmlc}" />
		</mxmlc>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: doc_core                      
         - - - - - - - - - - - - - - - - - -->
	<target name="doc_core" description="Gen aw_core's doc">
		<asdoc output="${core.doc.dir}" package-description-file="${basedir}/package.xml" lenient="true" debug="${config.debug}" debug-password="${config.debug_password}" optimize="${config.optimize}" incremental="${config.incremental}" locale="${config.locale}" target-player="${config.player.version}" swf-version="${config.swf.version}" fork="true">
			<doc-sources path-element="${core.src.dir}" />

			<library-path dir="${core.lib.dir}" includes="**/*.swc" append="true" />
			
			<compiler.define name="${core.switch.debug.key}" value="${core.switch.debug.value}" />

			<jvmarg line="${jvmarg.asdoc}" />
		</asdoc>
	</target>
	
	<!-- ================================= 
          target: build_all              
         ================================= -->
    <target name="build_all" depends="compile_core, compile_test, compile_tool" description="Build all subproject">
        
    </target>

	
	<!-- ================================= 
          target: clean_all              
         ================================= -->
    <target name="clean_all" description="Clean all bin">
		<delete includeemptydirs="true" verbose="true">
			<fileset dir="${basedir}">
				<include name="**/aw_*/bin/**" />
			</fileset>
		</delete>
    </target>


	<!-- - - - - - - - - - - - - - - - - - 
          target: gen_worker                      
         - - - - - - - - - - - - - - - - - -->
	<target name="gen_worker">
		<basename file="${worker.name}" property="real.worker.name" suffix=".as" />
		<mxmlc file="${worker.name}" output="${workerswf.dir}/${real.worker.name}.swf" debug="${config.debug}" debug-password="${config.debug_password}" optimize="${config.optimize}" incremental="${config.incremental}" locale="${config.locale}" target-player="${config.player.version}" swf-version="${config.swf.version}" accessible="${config.accessible}" static-rsls="true" fork="true">
			<source-path path-element="${src.dir}" />
			
			<library-path dir="${core.bin.dir}" includes="**/*.swc" append="true" />
			<library-path dir="${tool.lib.dir}" includes="**/*.swc" append="true" />
			<library-path dir="${AIR_HOME}/frameworks/libs" includes="**/*.swc" append="true" />
			
			<jvmarg line="${jvmarg.mxmlc}" />
		</mxmlc>
	</target>
</project>
